@import "..\\Shared\\Function";
@import "..\\Shared\\ColorFunction";
@import "..\\Shared\\Media";
@import "..\\Shared\\Config";
@import "..\\Shared\\Mixin";
@import "LayoutMixin";

@include airy();

@each $n, $v in getMap(Airy) {
    @include airy($n, $n);
}

.align {
    &-left {
        text-align: left;

        &-force {
            text-align: left !important;
        }
    }

    &-right {
        text-align: right;

        &-force {
            text-align: right !important;
        }
    }

    &-center {
        text-align: center;

        &-force {
            text-align: center !important;
        }
    }

    &-vertical {
        &-top {
            position: absolute;
            top: 0;

            &-force {
                position: absolute !important;
                top: 0 !important;
            }

            &-fixed {
                position: fixed;
                top: 0;

                &-force {
                    position: fixed !important;
                    top: 0 !important;
                }
            }
        }

        &-center,
        &-center-50 {
            position: absolute;
            @include absoluteCenter(Vertical);

            &-force {
                position: absolute !important;
                @include absoluteCenter(Vertical, 50%, true);
            }

            &-fixed {
                position: fixed;
                @include absoluteCenter(Vertical);

                &-force {
                    position: fixed !important;
                    @include absoluteCenter(Vertical, 50%, true);
                }
            }
        }

        &-center-25 {
            position: absolute;
            @include absoluteCenter(Vertical, 25%);

            &-force {
                position: absolute !important;
                @include absoluteCenter(Vertical, 25%, true);
            }

            &-fixed {
                position: fixed;
                @include absoluteCenter(Vertical, 25%);

                &-force {
                    position: fixed !important;
                    @include absoluteCenter(Vertical, 25%, true);
                }
            }
        }

        &-center-75 {
            position: absolute;
            @include absoluteCenter(Vertical, 75%);

            &-force {
                position: absolute !important;
                @include absoluteCenter(Vertical, 75%, true);
            }

            &-fixed {
                position: fixed;
                @include absoluteCenter(Vertical, 75%);

                &-force {
                    position: fixed !important;
                    @include absoluteCenter(Vertical, 75%, true);
                }
            }
        }

        &-bottom {
            position: absolute;
            bottom: 0;

            &-force {
                position: absolute !important;
                bottom: 0 !important;
            }

            &-fixed {
                position: fixed;
                bottom: 0;

                &-force {
                    position: fixed !important;
                    bottom: 0 !important;
                }
            }
        }
    }

    &-horizontal {
        &-center,
        &-center-50 {
            position: absolute;
            @include absoluteCenter();

            &-force {
                position: absolute !important;
                @include absoluteCenter(Horizontal, 50%, true);
            }

            &-fixed {
                position: fixed !important;
                @include absoluteCenter();

                &-force {
                    position: fixed !important;
                    @include absoluteCenter(Horizontal, 50%, true);
                }
            }
        }

        &-center-25 {
            position: absolute;
            @include absoluteCenter(Horizontal, 25%);

            &-force {
                position: absolute !important;
                @include absoluteCenter(Horizontal, 25%, true);
            }

            &-fixed {
                position: fixed;
                @include absoluteCenter(Horizontal, 25%);

                &-force {
                    position: fixed !important;
                    @include absoluteCenter(Horizontal, 25%, true);
                }
            }
        }

        &-center-75 {
            position: absolute;
            @include absoluteCenter(Horizontal, 75%);

            &-force {
                position: absolute !important;
                @include absoluteCenter(Horizontal, 75%, true);
            }

            &-fixed {
                position: fixed;
                @include absoluteCenter(Horizontal, 75%);

                &-force {
                    position: fixed !important;
                    @include absoluteCenter(Horizontal, 75%, true);
                }
            }
        }

        &-left {
            position: absolute;
            left: 0;

            &-force {
                position: absolute !important;
                left: 0 !important;
            }

            &-fixed {
                position: fixed;
                left: 0;

                &-force {
                    position: fixed !important;
                    left: 0 !important;
                }
            }
        }

        &-right {
            position: absolute;
            right: 0;

            &-force {
                position: absolute !important;
                right: 0 !important;
            }

            &-fixed {
                position: fixed;
                right: 0;

                &-force {
                    position: fixed !important;
                    right: 0 !important;
                }
            }
        }
    }
}

@each $name, $val in getMap(Width) {
    .#{"width-" + str($name)} {
        width: $val;

        @each $n, $v in getMap(Airy) {
            &.#{"airy-" + str($n)} {
                margin: $v;
            }

            &-#{"airy-" + str($n)} {
                width: $val;
                margin: $v;
            }

            @if (equal($n, MD)) {
                &.airy {
                    margin: $v;
                }

                &-airy {
                    width: $val;
                    margin: $v;
                }
            }
        }
    }
}

.#{KW(Responsive)} {
    @include responsive(true, false);

    &-full-height {
        @include responsive(true, false);
        height: 100%;

        &-center {
            @include responsive(true);
            height: 100%;
        }
    }

    &-center {
        @include responsive(true);
    }
}

.container {
    @include responsive(true, false, true);

    &-clean {
        @include responsive(true, false, false);
    }

    &-auto {
        @include responsive(true, true, true);

        &-clean {
            @include responsive(true, true, false);
        }
    }

    &-full {
        @include responsive(false, false, true);

        &-clean {
            @include responsive(false, false, false);
        }
    }
}

.#{KW(BG-Cover)} {
    @include bgCover();

    &-fixed {
        @include bgCover(true);
    }
}

.fixed-top {
    position: fixed;
    top: 0;
    bottom: unset;
    left: 0;
    right: 0;

    &-force {
        position: fixed !important;
        top: 0 !important;
        bottom: unset !important;
        left: 0 !important;
        right: 0 !important;
    }
}

.fixed-bottom {
    position: fixed;
    top: unset;
    left: 0;
    right: 0;
    bottom: 0;

    &-force {
        position: fixed !important;
        top: unset !important;
        left: 0 !important;
        right: 0 !important;
        bottom: 0 !important;
    }
}

.fixed-left {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: unset;

    &-force {
        position: fixed !important;
        top: 0 !important;
        bottom: 0 !important;
        left: 0 !important;
        right: unset !important;
    }
}

.fixed-right {
    position: fixed;
    top: 0;
    bottom: 0;
    left: unset;
    right: 0;

    &-force {
        position: fixed !important;
        top: 0 !important;
        bottom: 0 !important;
        left: unset !important;
        right: 0 !important;
    }
}

.float-left {
    float: left;

    &-force {
        float: left !important;
    }
}

.float-right {
    float: right;

    &-force {
        float: right !important;
    }
}

.hide,
.close,
.invisible {
    display: none;
    visibility: hidden;

    &-force {
        display: none !important;
        visibility: hidden !important;
    }
}

.show,
.block,
.visible {
    display: block;
    visibility: visible;

    &-force {
        display: block !important;
        visibility: visible !important;
    }
}

.pos {
    &-rltv {
        position: relative;

        &-force {
            position: relative !important;
        }
    }

    &-abslt {
        position: absolute;

        &-force {
            position: absolute !important;
        }
    }

    &-fxd {
        position: fixed;

        &-force {
            position: fixed !important;
        }
    }

    &-stc {
        position: static;

        &-force {
            position: static !important;
        }
    }

    &-stck {
        position: sticky;

        &-force {
            position: sticky !important;
        }
    }

    &-cntr {
        position: center;

        &-force {
            position: center !important;
        }
    }

    &-pg {
        position: page;

        &-force {
            position: page !important;
        }
    }
}

@for $i from 1 through 9 {
    .#{KW(Opacity)}-#{$i} {
        @if ($i == 1) {
            opacity: 1;

            &-force {
                opacity: 1 !important;
            }
        }
        @else {
            opacity: #{"0." + $i};

            &-force {
                opacity: #{"0." + $i} !important;
            }
        }
    }
}

.clean {
    padding: unset;
    margin: unset;

    &-force {
        padding: unset !important;
        margin: unset !important;
    }
}

.clean-mrg {
    margin: unset;

    &-force {
        margin: unset !important;
    }
}

.clean-pad {
    padding: unset;

    &-force {
        padding: unset !important;
    }
}

.color {
    &-bg-white {
        background-color: white;

        &-force {
            background-color: white !important;
        }
    }

    &-white {
        color: white;

        &-force {
            color: white !important;
        }
    }

    &-bg-black {
        background-color: black;

        &-force {
            background-color: black !important;
        }
    }

    &-black {
        color: black;

        &-force {
            color: black !important;
        }
    }

    @each $n, $v in getMap(CP) {
        &-#{str($n)} {
            color: color($n);

            &-force {
                color: color($n) !important;
            }
        }

        &-bg-#{str($n)} {
            background-color: color($n);

            &-force {
                background-color: color($n) !important;
            }

            &-opacity-8 {
                background-color: rgba(color($n), 0.8);

                &-force {
                    background-color: rgba(color($n), 0.8) !important;
                }
            }

            &-opacity-6 {
                background-color: rgba(color($n), 0.6);

                &-force {
                    background-color: rgba(color($n), 0.6) !important;
                }
            }

            &-opacity-4 {
                background-color: rgba(color($n), 0.4);

                &-force {
                    background-color: rgba(color($n), 0.4) !important;
                }
            }

            &-opacity-2 {
                background-color: rgba(color($n), 0.2);

                &-force {
                    background-color: rgba(color($n), 0.2) !important;
                }
            }
        }
    }
}

.dis {
    &-table {
        display: table;
        visibility: visible;

        &-force {
            display: table !important;
            visibility: visible !important;
        }
    }

    &-inline-table {
        display: inline-table;
        visibility: visible;

        &-force {
            display: inline-table !important;
            visibility: visible !important;
        }
    }

    &-block {
        display: block;
        visibility: visible;

        &-force {
            display: block !important;
            visibility: visible !important;
        }
    }

    &-inline-block {
        display: inline-block;
        visibility: visible;

        &-force {
            display: inline-block !important;
            visibility: visible !important;
        }
    }

    &-normal {
        display: normal;
        visibility: visible;

        &-force {
            display: normal !important;
            visibility: visible !important;
        }
    }

    &-none {
        display: none;
        visibility: hidden;

        &-force {
            display: none !important;
            visibility: hidden !important;
        }
    }
}

.#{KW(WhiteSpace)} {
    &-nowrap {
        white-space: nowrap;

        &-force {
            white-space: nowrap !important;
        }
    }

    &-normal {
        white-space: normal;

        &-force {
            white-space: normal !important;
        }
    }

    &-pre {
        white-space: pre;

        &-force {
            white-space: pre !important;
        }
    }
}

.table-auto {
    display: table;
    margin-left: auto;
    margin-right: auto;

    &-force {
        display: table !important;
        margin-left: auto !important;
        margin-right: auto !important;
    }
}

.fill {
    min-width: 100%;
    min-height: 100%;
}
