{"version":3,"sources":["Layout/_Row.scss","_Shared/_Media.scss"],"names":[],"mappings":"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","file":"Layout.Row.min.css","sourcesContent":["﻿@import \"..\\\\_Shared\\\\Function\";\r\n@import \"..\\\\_Shared\\\\Media\";\r\n@import \"..\\\\_Shared\\\\Config\";\r\n\r\n.row {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(2, auto);\r\n\r\n    & > div[class^='col-'] {\r\n        grid-row: auto;\r\n        grid-column: 1/-1;\r\n    }\r\n}\r\n\r\n@each $size in $commonSizes {\r\n    @include media($size) {\r\n        @for $c from 1 through 12 {\r\n            .col-#{lower($size)}-#{$c} {\r\n                $span: $c;\r\n\r\n                grid-row: 1 !important;\r\n                grid-column: auto / span $span !important;\r\n                padding: 6px;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@include media(SM) {\r\n    .row {\r\n        grid-template-columns: repeat(12, 1fr);\r\n    }\r\n}","﻿@import \"Function\";\r\n@import \"Config\";\r\n\r\n@mixin media($size: MD, $orientation: Any, $mode: Up) {\r\n    $size: upper($size);\r\n    $s: GET(Media, $size);\r\n    $query: null;\r\n\r\n    @if (equal($mode, UP)) {\r\n        $query: \"(min-width: \" + $s + \")\";\r\n    }\r\n    @else if (equal($mode, DOWN)) {\r\n        $query: \"(max-width: \" + $s + \")\";\r\n    }\r\n    @else if (equal($mode, ONLY)) {\r\n        $query: \"(min-width: \" + $s + \")\";\r\n        $max: null;\r\n\r\n        @if not (equal($size, XL)) {\r\n            $max: null;\r\n        }\r\n        @else if (equal($size, XS)) {\r\n            $max: SM;\r\n        }\r\n        @else if (equal($size, SM)) {\r\n            $max: MD;\r\n        }\r\n        @else if (equal($size, MD)) {\r\n            $max: LG;\r\n        }\r\n        @else if (equal($size, LG)) {\r\n            $max: XL;\r\n        }\r\n\r\n        $query: $query + \" and (max-width: \" + map-get($mediaBreakpoints, $max) + \")\";\r\n    }\r\n\r\n    @if not (equal($orientation, Any)) {\r\n        $query: $query + \" and (orientation: \" + lower($orientation) + \")\";\r\n    }\r\n\r\n    @media #{$query} {\r\n        @content;\r\n    }\r\n}\r\n\r\n//js"]}