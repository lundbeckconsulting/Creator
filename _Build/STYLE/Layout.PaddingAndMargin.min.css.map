{"version":3,"sources":["Layout/_PaddingAndMargin.scss","_Shared/_Config.scss","_Shared/_Mixin.scss"],"names":[],"mappings":"AAII,WACI,QCCsC,KC+KtC,QAAS,YF5Kb,eACI,QCJsC,KC+KtC,QAAS,YAIT,OAAQ,EF3KZ,SACI,QCTsC,KDUtC,QCVsC,KDe1C,SACI,QChBU,IDkBV,eACI,QCnBM,IC+KV,QAAS,YFxJT,mBACI,QCxBM,IC+KV,QAAS,YAIT,OAAQ,EFpKZ,QACI,QChBmB,IDkBnB,cACI,QCnBe,IC+KnB,QAAS,YFxJT,kBACI,QCxBe,IC+KnB,QAAS,YAIT,OAAQ,EFpKZ,QACI,QChB4B,KDkB5B,cACI,QCnBwB,KC+K5B,QAAS,YFxJT,kBACI,QCxBwB,KC+K5B,QAAS,YAIT,OAAQ,EFpKZ,QACI,QChBsC,KDkBtC,cACI,QCnBkC,KC+KtC,QAAS,YFxJT,kBACI,QCxBkC,KC+KtC,QAAS,YAIT,OAAQ,EFpKZ,QACI,QChBgD,KDkBhD,cACI,QCnB4C,KC+KhD,QAAS,YFxJT,kBACI,QCxB4C,KC+KhD,QAAS,YAIT,OAAQ,EFpKZ,QACI,QChB0D,KDkB1D,cACI,QCnBsD,KC+K1D,QAAS,YFxJT,kBACI,QCxBsD,KC+K1D,QAAS,YAIT,OAAQ,EFpKZ,SACI,QChBqE,KDkBrE,eACI,QCnBiE,KC+KrE,QAAS,YFxJT,mBACI,QCxBiE,KC+KrE,QAAS,YAIT,OAAQ,EFpJZ,WACI,OClCqB,KCqLrB,OAAQ,EF/IZ,UEyGA,YAAa,KACb,aAAc,KFtGd,gBACI,OC3CqB,KCqLrB,OAAQ,EAtCZ,YAAa,KACb,aAAc,KF7FV,QACI,OCpDQ,IDuDZ,aACI,YCxDQ,ID2DZ,cACI,aC5DQ,ID+DZ,YACI,WChEQ,IDmEZ,eACI,cCpEQ,IDuEZ,aACI,YCxEQ,IDyER,aCzEQ,IDmDZ,QACI,OCpDiB,KDuDrB,aACI,YCxDiB,KD2DrB,cACI,aC5DiB,KD+DrB,YACI,WChEiB,KDmErB,eACI,cCpEiB,KDuErB,aACI,YCxEiB,KDyEjB,aCzEiB,KDmDrB,QACI,OCpD2B,KDuD/B,aACI,YCxD2B,KD2D/B,cACI,aC5D2B,KD+D/B,YACI,WChE2B,KDmE/B,eACI,cCpE2B,KDuE/B,aACI,YCxE2B,KDyE3B,aCzE2B,KDmD/B,QACI,OCpDqC,KDuDzC,aACI,YCxDqC,KD2DzC,cACI,aC5DqC,KD+DzC,YACI,WChEqC,KDmEzC,eACI,cCpEqC,KDuEzC,aACI,YCxEqC,KDyErC,aCzEqC,KDmDzC,QACI,OCpD+C,KDuDnD,aACI,YCxD+C,KD2DnD,cACI,aC5D+C,KD+DnD,YACI,WChE+C,KDmEnD,eACI,cCpE+C,KDuEnD,aACI,YCxE+C,KDyE/C,aCzE+C,KDmDnD,SACI,OCpD0D,KDuD9D,cACI,YCxD0D,KD2D9D,eACI,aC5D0D,KD+D9D,aACI,WChE0D,KDmE9D,gBACI,cCpE0D,KDuE9D,cACI,YCxE0D,KDyE1D,aCzE0D","file":"Layout.PaddingAndMargin.min.css","sourcesContent":["﻿@import \"..\\\\_Shared\\\\Function\";\r\n@import \"..\\\\_Shared\\\\Mixin\";\r\n\r\n.pad {\r\n    &-clean {\r\n        padding: $defaultPad;\r\n        @include cleanBase(true, false, false);\r\n    }\r\n\r\n    &-mrg-clean {\r\n        padding: $defaultPad;\r\n        @include cleanBase();\r\n    }\r\n\r\n    &-doc {\r\n        padding: $defaultPad;\r\n        padding: $defaultPad;\r\n    }\r\n}\r\n\r\n@each $n, $v in $padValues {\r\n    .#{\"pad-\" + lower($n)} {\r\n        padding: $v;\r\n\r\n        &-clean {\r\n            padding: $v;\r\n            @include cleanBase(true, false, false);\r\n        }\r\n\r\n        &-mrg-clean {\r\n            padding: $v;\r\n            @include cleanBase();\r\n        }\r\n    }\r\n}\r\n\r\n.mrg {\r\n    &-clean {\r\n        margin: GET(Margin, SM);\r\n        @include cleanBase(false, true, false);\r\n    }\r\n\r\n    &-auto {\r\n        @include autoMargin();\r\n    }\r\n\r\n    &-clean-auto {\r\n        margin: GET(Margin, SM);\r\n        @include cleanBase(false, true, false);\r\n        @include autoMargin();\r\n    }\r\n\r\n    @each $n, $v in $marginValues {\r\n        $n: lower($n);\r\n\r\n        &-#{$n} {\r\n            margin: $v;\r\n        }\r\n\r\n        &-#{$n + \"-left\"} {\r\n            margin-left: $v;\r\n        }\r\n\r\n        &-#{$n + \"-right\"} {\r\n            margin-right: $v;\r\n        }\r\n\r\n        &-#{$n + \"-top\"} {\r\n            margin-top: $v;\r\n        }\r\n\r\n        &-#{$n + \"-bottom\"} {\r\n            margin-bottom: $v;\r\n        }\r\n\r\n        &-#{$n + \"-both\"} {\r\n            margin-left: $v;\r\n            margin-right: $v;\r\n        }\r\n    }\r\n}","﻿@import \"ColorProfiles\";\r\n\r\n$mediaBreakpoints: (XS: 0px, SM: 576px, MD: 768px, LG: 992px, XL: 1200px);\r\n$mediaOrientation: (0: Any, 1: Portrait, 2: Landscape);\r\n$marginValues: (XS: 4px, SM: 18px, MD: 28px, LG: 42px, XL: 60px, XXL: 82px, Auto: null);\r\n$docValues: (XS: 298px, SM: 444px, MD: 598px, LG: 878px, XL: 1366px);\r\n$padValues: (XXS: 2px, XS: 4px, SM: 10px, MD: 16px, LG: 30px, XL: 54px, XXL: 72px);\r\n$airyValues: (XS: 4px, SM: 8px, MD: 16px, LG: 28px, XL: 44px, XXL: 62px);\r\n$defaultDirections: (Left, Top, Right, Bottom);\r\n$padDirections: append($defaultDirections, \"LeftRight, TopBottom\", comma);\r\n$widthSizes: (XXS: 26px, XS: 64px, SM: 104px, MD: 232px, LG: 514px, XL: 788px, XXL: 974px, DOC: map-get($docValues, XL));\r\n$headSizes: (XXS: 1.1rem, XS: 1.4rem, SM: 1.8rem, MD: 2.2rem, LG: 3rem, XL: 4.3rem, XXL: 5.2rem);\r\n$headSyno: (1: XXL, 2: XL, 3: LG, 4: MD, 5: SM, 6: XS, 7: XXS);\r\n$fontSizes: (1: 0.8rem, 2: 1.4rem, 3: 1.8rem, 4: 2.5rem, 5: 2.9rem, 6: 3.2rem, 7: 3.8rem, 8: 4.2rem, 9: 4.6rem, 10: 5.2rem);\r\n$modalSizes: (SM: 384px, MD: 522px, LG: 734px, XL: 998px);\r\n$commonSizes: (XS, SM, MD, LG, XL);\r\n$commonSizesExtended: (XXS, XS, SM, MD, LG, XL, XXL);\r\n$flexAlignItems: (Base: baseline, Center: center, End: flex-end, Start: flex-start, Stretch: stretch);\r\n$flexJustifyItems: (Center: center, End: flex-end, Start: flex-start, Around: space-around, Between: space-between);\r\n$gridItemSizes: (XS: 8px, SM: 60px, MD: 144px, LG: 366px, XL: 536px, XXL: 768px);\r\n$gridGapSizes: (XS: 2px, SM: 4px, MD: 8px, LG: 16px, XL: 30px, XXL: 1fr);\r\n\r\n$keywords: (\r\n    BG-Cover: bg-cover, \r\n    BG-Repeat-X: bg-repeat-x, \r\n    BG-Repeat-Y: bg-repeat-y, \r\n    BG-NoRepeat: bg-norepeat, \r\n    Font: f, \r\n    Head: h, \r\n    Col: col-, \r\n    Responsive: r, \r\n    Image: img, \r\n    Button: btn, \r\n    AlignVertical: align-vertical, \r\n    TextBox: txt, \r\n    Textarea: txt-area, \r\n    ValidateError: validate-error, \r\n    ValidatedForm: form-validated, \r\n    WhiteSpace: ws);\r\n\r\n$systemValues: (\r\n    BorderRadius: 6px, \r\n    PadBase: map-get($padValues, MD), \r\n    Margin: map-get($marginValues, MD), \r\n    Font: map-get($fontSizes, 3), \r\n    Width: map-get($docValues, MD), \r\n    BorderWidth: 6px, \r\n    ModalBackgroundColor: white);\r\n\r\n$contentMaxWidth: map-get($widthSizes, DOC);\r\n$defaultPad: map-get($padValues, MD);\r\n$defaultMargin: 12px;\r\n\r\n$mapIndex: (\r\n    Pad: (Data: $padValues),\r\n    Width: (Data: $widthSizes),\r\n    Media: (Data: $mediaBreakpoints), \r\n    MediaOrientation: (Data: $mediaOrientation), \r\n    Margin: (Data: $marginValues), \r\n    CP: (Data: $CPs), \r\n    Modal: (Data: $modalSizes), \r\n    Sys: (Data: $systemValues), \r\n    PadDirection: (Data: $padDirections), \r\n    Keyword: (Data: $keywords), \r\n    KW: (Data: $keywords), \r\n    FontSize: (Data: $fontSizes), \r\n    Doc: (Data: $docValues), \r\n    Airy: (Data: $airyValues), \r\n    Head: (Data: $headSizes), \r\n    FlexAlign: (Data: $flexAlignItems), \r\n    FlexJustify: (Data: $flexJustifyItems), \r\n    Grid: (Data: $gridItemSizes), \r\n    GridGap: (Data: $gridGapSizes), \r\n    Common: (Data: $commonSizes), \r\n    SizeExtended: (Data: $commonSizesExtended));\r\n\t","﻿@import \"Config\";\r\n@import \"Function\";\r\n\r\n@mixin modal($size, $cp) {\r\n    $center: -16%;\r\n\r\n    @if (equal($size, SM)) {\r\n        $center: -118%;\r\n    }\r\n    @else if (equal($size, MD)) {\r\n        $center: -74%;\r\n    }\r\n    @else if (equal($size, LG)) {\r\n        $center: -54%;\r\n    }\r\n    @else if (equal($size, XL)) {\r\n        $center: -50%; //yes kcvmsdj vsvs fvvd fs jksdk dcs ksks cas kdsid jjiuj d cds sa s a  csjnsk fvdjkls s asd csjs dsjsj cvzsdc ds\r\n    }\r\n\r\n    width: 100%;\r\n    max-width: GET(Modal, $size);\r\n    max-height: 84%;\r\n    border: 4px solid color($cp, Primary);\r\n    border-radius: GET(Sys, BorderRadius);\r\n    padding: 0px;\r\n    z-index: 99;\r\n    position: fixed;\r\n    top: 18px;\r\n\r\n    @include shadow();\r\n    @include absoluteCenter($center);\r\n}\r\n\r\n@mixin modalHeader($cp) {\r\n    $colorMain: color($cp, Primary);\r\n    $colorSub: color($cp, Second);\r\n    $colorBG: color($cp, Fifth);\r\n\r\n    @if (equal($cp, Primary)) {\r\n        $colorMain: darken($colorMain, 20%);\r\n        $colorBG: lighten($colorBG, 10%);\r\n    }\r\n    @else if (equal($cp, Success)) {\r\n        $colorMain: darken($colorMain, 8%);\r\n        $colorBG: lighten($colorBG, 18%);\r\n    }\r\n    @else if (equal($cp, Danger)) {\r\n        $colorBG: lighten($colorBG, 8%);\r\n    }\r\n    @else if (equal($cp, Warning)) {\r\n        $colorMain: darken($colorMain, 24%);\r\n    }\r\n    @else if (equal($cp, Info)) {\r\n        $colorMain: darken($colorMain, 18%);\r\n        $colorBG: lighten($colorBG, 14%);\r\n    }\r\n    @else if (equal($cp, Dark)) {\r\n        $colorMain: color($cp, Fifth);\r\n        $colorBG: $colorSub;\r\n    }\r\n    @else if (equal($cp, Antan)) {\r\n        $colorBG: lighten($colorBG, 14%);\r\n    }\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    color: $colorMain;\r\n    padding: 4px;\r\n    border-bottom: 2px solid $colorSub;\r\n    background-color: $colorBG;\r\n    font-size: 1.6rem;\r\n\r\n    & > .close-modal {\r\n        $iconColor: color(Danger);\r\n\r\n        @if (equal($cp, Dark)) {\r\n            $iconColor: lighten(color($cp, Fifth), 8%);\r\n        }\r\n\r\n        color: $iconColor;\r\n    }\r\n}\r\n\r\n@mixin modalBody() {\r\n    padding: $defaultPad;\r\n    background-color: GET(SYS, ModalBackgroundColor);\r\n}\r\n\r\n@mixin airy($size: MD, $inside: false) {\r\n    $val: GET(Airy, $size);\r\n\r\n    @if ($inside) {\r\n        padding: $val;\r\n    }\r\n    @else {\r\n        margin: $val;\r\n    }\r\n}\r\n\r\n@mixin font($size: MD, $bold: false) {\r\n    font-size: GET(Font, $size);\r\n\r\n    @if ($bold) {\r\n        font-weight: bold;\r\n    }\r\n}\r\n\r\n@mixin responsive($restrain: true, $center: true, $pad: false) {\r\n    $min: 0px;\r\n    $max: 100%;\r\n\r\n    @if ($restrain) {\r\n        $max: GET(Width, DOC);\r\n    }\r\n\r\n    width: 100%;\r\n    min-width: $min;\r\n    max-width: $max;\r\n\r\n    @if ($center) {\r\n        @include autoMargin();\r\n    }\r\n\r\n    @if ($pad) {\r\n        padding: $defaultPad;\r\n    }\r\n}\r\n\r\n@mixin color($cpName: Default, $clrName: Primary, $font: false, $bg: false) {\r\n    $clr: map-get($CPs, toCPName($cpName));\r\n    $color: map-get($clr, toPCColorName($clrName));\r\n\r\n    @if ($font) {\r\n        color: $color;\r\n    }\r\n\r\n    @if ($bg) {\r\n        background-color: $color;\r\n    }\r\n}\r\n\r\n@mixin absoluteCenter($val: -50%) {\r\n    left: 50%;\r\n    transform: translate($val);\r\n}\r\n\r\n@mixin autoMargin() {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n\r\n@mixin bgCover($fixed: false, $img: None) {\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    background-size: cover;\r\n\r\n    @if ($fixed) {\r\n        background-attachment: fixed;\r\n    }\r\n\r\n    @if not (equal($img, None)) {\r\n        background-image: url($img);\r\n    }\r\n}\r\n\r\n@mixin bgRepeat() {\r\n    background-repeat: repeat;\r\n}\r\n\r\n@mixin bgRepeatY() {\r\n    background-position-y: left;\r\n    background-position-x: unset;\r\n}\r\n\r\n@mixin bgRepeatX() {\r\n    background-position-x: top;\r\n    background-position-y: unset;\r\n}\r\n\r\n@mixin cleanBase($pad: true, $mrg: true, $border: false, $table: false, $td: false) {\r\n    @if ($pad) {\r\n        padding: 0px !important;\r\n    }\r\n\r\n    @if ($mrg) {\r\n        margin: 0px;\r\n    }\r\n\r\n    @if ($border) {\r\n        border: none;\r\n    }\r\n\r\n    @if ($table) {\r\n        border: none;\r\n        margin: inherit;\r\n    }\r\n\r\n    @if ($td) {\r\n        td {\r\n            border: none;\r\n            padding: initial;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin table($cpName: Default, $border: true, $fat: false, $airy: false, $autoMargin: false) {\r\n    display: table;\r\n    border-collapse: collapse;\r\n    \r\n    @if ($autoMargin) {\r\n        @include autoMargin();\r\n    }\r\n}\r\n\r\n@mixin tableAlternate($cpName: Default) {\r\n    tr:nth-child(even) {\r\n        $clr: color($cpName, Fifth);\r\n\r\n        @if (equal($cpName, Light)) {\r\n            $clr: #e8e8e8;\r\n        }\r\n\r\n        background-color: $clr;\r\n    }\r\n}\r\n\r\n@mixin bgCover($fixed: false, $img: null) {\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    background-size: cover;\r\n\r\n    @if ($fixed) {\r\n        background-attachment: fixed;\r\n    }\r\n\r\n    @if not (isNull($img)) {\r\n        background-image: url($img);\r\n    }\r\n}\r\n\r\n@mixin noOverflow() {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n@mixin table($cpName: Default, $td: true, $airy: false, $fat: false, $border: true) {\r\n    display: table;\r\n    border-spacing: 0;\r\n    border-collapse: collapse;\r\n\r\n    thead {\r\n        padding: 8px;\r\n        background-color: color($cpName, Third);\r\n        font-weight: bold;\r\n        color: color($cpName);\r\n    }\r\n\r\n    @if ($td) {\r\n        @include tableTd($cpName, $airy, $fat, $border);\r\n    }\r\n}\r\n\r\n@mixin tableTd($cpName: Default, $airy: false, $fat: false, $border: true) {\r\n    td {\r\n        $clr: color($cpName);\r\n        $pad: 6px;\r\n        $borderWidth: 2px;\r\n        $borderColor: rgba($clr, 0.4);\r\n\r\n        @if ($airy) {\r\n            $pad: 14px;\r\n        }\r\n\r\n        @if ($fat) {\r\n            $borderWidth: 6px;\r\n        }\r\n\r\n        @if ($border) {\r\n            border: $borderWidth solid $borderColor;\r\n        }\r\n\r\n        color: $clr;\r\n        padding: $pad;\r\n\r\n        &:first-child {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin tableAlternate($cpName: Default) {\r\n    tr:nth-child(even) {\r\n        $clr: color($cpName, Fifth);\r\n\r\n        @if (equal($cpName, Light)) {\r\n            $clr: #e8e8e8;\r\n        }\r\n\r\n        background-color: rgba($clr, 0.8);\r\n    }\r\n}\r\n\r\n@mixin formControl($cpName: Default, $glowFocus: false, $padHori: 12px) {\r\n    $cpName: toCPName($cpName);\r\n    $fore: color($cpName, Fifth);\r\n    $padVertical: 6px;\r\n    $padHorizontal: $padHori;\r\n    $margin: 4px;\r\n\r\n    border-radius: GET(Sys, BorderRadius);\r\n    padding-top: $padVertical;\r\n    padding-bottom: $padVertical;\r\n    padding-left: $padHorizontal;\r\n    padding-right: $padHorizontal;\r\n    font-size: 1.8rem;\r\n    transition: all 0.30s ease-in-out;\r\n    text-decoration: none;\r\n    margin-top: $margin;\r\n    margin-bottom: $margin;\r\n\r\n    @if ($glowFocus) {\r\n        @include boxGlow($cpName);\r\n    }\r\n}\r\n\r\n@mixin formControlHover($cpName: Default, $gradient: false) {\r\n    &:hover {\r\n        $cursor: pointer;\r\n\r\n        @if ($gradient) {\r\n            $start: color($cpName, Fifth);\r\n            $end: color($cpName, Second);\r\n\r\n            background: linear-gradient($start, $end);\r\n        }\r\n        @else {\r\n            $cpName: toCPName($cpName);\r\n            $back: darken(color($cpName), 18%);\r\n            $fore: color($cpName, Fifth);\r\n            \r\n\r\n            @if (equal($cpName, Warning)) {\r\n                $fore: white;\r\n            }\r\n            @else if (equal($cpName, Dark)) {\r\n                $fore: #6d6d6d;\r\n            }\r\n\r\n            color: $fore;\r\n            background-color: $back;\r\n        }\r\n\r\n        cursor: $cursor;        \r\n    }\r\n}\r\n\r\n@mixin formTextbox($cpName: Default, $glow: true) {\r\n    $color: color(toCPName($cpName));\r\n\r\n    @if (equal($cpName, Default)) {\r\n        $color: #a5a5a5;\r\n    }\r\n\r\n    @include formControl($cpName, true);\r\n\r\n    @if ($glow) {\r\n        @include boxGlow($cpName);\r\n    }\r\n\r\n    @if (equal($cpName, Default)) {\r\n            $color: #272727;\r\n    }\r\n\r\n    font-size: 1.6rem;\r\n    border: 2px solid #343434;\r\n    padding: 6px;\r\n\r\n    &:hover {\r\n        background-color: #e4e1cf;\r\n    }\r\n}\r\n\r\n@mixin formButtonBase($cpName: Default, $border: false, $gradient: false) {\r\n    $cpName: toCPName($cpName);\r\n    $fore: color($cpName, Fifth);\r\n    $back: color($cpName);\r\n    $borderColor: $back;\r\n    $mrg: 2px;\r\n\r\n    @if (equal($cpName, Default)) {\r\n        $fore: color(Default, Third);\r\n        $back: white;\r\n        $border: true;\r\n        $borderColor: #2a2a2a;\r\n    }\r\n    @else if (equal($cpName, Warning)) {\r\n        @if ($gradient) {\r\n            $fore: color($cpName, Fifth);\r\n        }\r\n    }\r\n    @else if (equal($cpName, Dark)) {\r\n        $fore: gray;\r\n    }\r\n\r\n    @if (equal($cpName, Default)) {\r\n        $border: true;\r\n    }\r\n\r\n    @include formControl($cpName, false, 22px);\r\n\r\n    @if ($gradient) {\r\n        background: linear-gradient($fore, $back);\r\n    }\r\n    @else {\r\n        background-color: $back;\r\n    }\r\n\r\n    @if ($border) {\r\n        border: 2px solid $borderColor;\r\n    }\r\n\r\n    @if (equal($cpName, Warning)) {\r\n        $fore: #86291c;\r\n    }\r\n    @else if ($gradient and equal($cpName, Info)) {\r\n        $fore: #0c436e;\r\n    }\r\n    @else if ($gradient and equal($cpName, Dark)) {\r\n        $fore: white;\r\n    }\r\n    @else if ($gradient) {\r\n        @if (equalz($cpName, Primary, Success, Danger, Light, Antan, Notify)) {\r\n            $fore: darken(color($cpName), 22%);\r\n        }   \r\n    }\r\n\r\n    @if (equal($cpName, Default)) {\r\n        $fore: black;\r\n    }\r\n\r\n    display: inline-block;\r\n    margin-left: $mrg;\r\n    margin-right: $mrg;\r\n    color: $fore;\r\n}\r\n\r\n@mixin formButtonSolid($cpName: Default, $border: false) {\r\n    @include formButtonBase($cpName, $border);\r\n    @include formControlHover($cpName);\r\n}\r\n\r\n@mixin formButtonGradient($cpName: Default, $border: false) {\r\n    @include formButtonBase($cpName, $border, true);\r\n    @include formControlHover($cpName, true);\r\n}\r\n\r\n@mixin boxGlow($cpName: Default, $size: 18px, $borderCpName: None) {\r\n    $cpName: toCPName($cpName);\r\n    $color: color($cpName);\r\n    $borderColor: unset;\r\n\r\n    @if (equal($cpName, Default)) {\r\n        $color: #b9b9b9;\r\n    }\r\n\r\n    @if not (equal($borderCpName, None)) {\r\n        $borderCpName: toCPName($borderCpName);\r\n        $borderColor: color($borderCpName);\r\n\r\n        box-shadow: 0 0 $size $borderColor;\r\n        -webkit-box-shadow: 0 0 $size 0 $borderColor;\r\n        -moz-box-shadow: 0 0 $size 0 $borderColor;\r\n        border: 2px solid $borderColor;\r\n    }\r\n    @else {\r\n        border: 2px solid rgba(white, 0);\r\n\r\n        &:focus:not(#{GET(KW, ValidateError)}) {\r\n            -webkit-transition: all 0.30s ease-in-out;\r\n            -moz-transition: all 0.30s ease-in-out;\r\n            -webkit-box-shadow: 0 0 $size 0 $color;\r\n            -moz-box-shadow: 0 0 $size 0 $color;\r\n            box-shadow: 0 0 $size $color;\r\n            outline: none;\r\n            background-color: color(Light, Fourth);\r\n        }\r\n    }\r\n}\r\n\r\n@mixin textGlow($color: #002155, $x: 1px, $y: 1px, $blur: 10px) {\r\n    text-shadow: $x $y $blur $color, $x $y $blur $color;\r\n}\r\n\r\n@mixin textOutline($size: 4px, $color: #4073c4, $outlineColor: #8d0000) {\r\n    color: $color;\r\n    -webkit-text-stroke-width: $size;\r\n    -webkit-text-stroke-color: $outlineColor;\r\n}\r\n\r\n@mixin textShadow($size: 2px, $color: color(Default)) {\r\n    text-shadow: $size $size $color;\r\n}\r\n\r\n@mixin shadow($size: 3px, $color: lighten(color(Default), 28%)) {\r\n    box-shadow: $size $size $color;\r\n}\r\n\r\n@mixin rotate($degrees: 90deg) {\r\n    transform: rotate($degrees);\r\n}\r\n\r\n@mixin rotate3D($x: 90, $y: 90, $z: 90, $angle: 90deg) {\r\n    transform: rotate3d($x, $y, $z, $angle);\r\n}\r\n\r\n@mixin rotateX($angle: 90deg) {\r\n    transform: rotateX($angle);\r\n}\r\n\r\n@mixin rotateY($angle: 90deg) {\r\n    transform: rotateY($angle);\r\n}\r\n\r\n@mixin rotateZ($angle: 90deg) {\r\n    transform: rotateZ($angle);\r\n}\r\n\r\n@mixin scale($x: 4, $y: 4) {\r\n    transform: scale($x, $y);\r\n}\r\n\r\n@mixin scaleX($scale: 4) {\r\n    transform: scaleX($scale);\r\n}\r\n\r\n@mixin scaleY($scale: 4) {\r\n    transform: scaleY($scale);\r\n}\r\n\r\n@mixin skew($x: 90deg, $y: 90deg) {\r\n    transform: skew($x, $y);\r\n}\r\n\r\n@mixin skewX($angel: 90deg) {\r\n    transform: skewX($angel);\r\n}\r\n\r\n@mixin skewY($angel: 90deg) {\r\n    transform: skewY($angel);\r\n}\r\n\r\n@mixin translate($x: 60px, $y: 100px) {\r\n    transform: translate($x, $y);\r\n}\r\n\r\n@mixin translateX($val: 60px) {\r\n    transform: translateX($val);\r\n}\r\n\r\n@mixin translateY($val: 100px) {\r\n    transform: translateY($val);\r\n}"]}