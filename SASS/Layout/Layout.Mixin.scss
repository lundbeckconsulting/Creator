@import "../Mixin.scss";
@import "Variables.scss";
@import "../Function.scss";

@mixin modal($size: MD, $color: Default) {
    $colorLight: color($color, Fourth);
    $colorDark: color($color);
    $modalSize: map-get($modalSizes, $size);

    position: fixed;
    display: none;
    width: 100%;
    max-width: $modalSize;
    top: 26px;
    z-index: 99;
    background-color: white;
    border: 4px solid $colorDark;
    border-radius: 8px;
    color: $colorDark;

    @include absoluteCenter();

    & > header, .content, footer {
        padding: 8px;
    }

    & > header {
        border-bottom: 2px solid $colorDark;
    }

    & > footer {
        border-top: 2px solid rgba($colorDark, 0.6);
    }
}

@mixin table($cpName: Default) {
    @include responsive();
    border-spacing: 0;
    border-collapse: collapse;

    thead {
        padding: 8px;
        background-color: color($cpName, Third);
        font-weight: bold;
        color: color($cpName);
    }

    td {
        padding: 8px;
        border-bottom: 1px solid rgba(color($cpName), 0.6);
        color: color($cpName);
    }

    td:first-child {
        padding-right: 0;
    }

    &.alternate {
        @include tableAlternate($cpName);
    }
}

@mixin tableAlternate($cpName: Default) {
    tr:nth-child(even) {
        $clr: color($cpName, Fifth);

        @if (equal($cpName, "Light")) {
            $clr: #e8e8e8;
        }

        background-color: $clr;
    }
}

@mixin bgCover($fixed: false, $img: None) {
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;

    @if ($fixed) {
        background-attachment: fixed;
    }

    @if not (equal($img, None)) {
        background-image: url($img);
    }
}

@mixin fontOutline($size, $color: white, $outlineColor: black) {
    color: $color;
    -webkit-text-stroke-width: $size;
    -webkit-text-stroke-color: $outlineColor;
}

@mixin noOverflow() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;}
